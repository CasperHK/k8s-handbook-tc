# Kubernetes v1.33 新特性：容器生命周期钩子改进示例
#
# 这个示例展示了 Kubernetes v1.33 中的新容器生命周期特性：
# 1. 自定义容器终止信号 (stopSignal)
# 2. 零持续时间的 sleep 钩子
#
# 注意：这些特性需要启用对应的特性门控

apiVersion: v1
kind: Pod
metadata:
  name: lifecycle-v1-33-demo
  labels:
    app: lifecycle-demo
spec:
  # 必须指定操作系统类型以使用 stopSignal 功能
  os:
    name: linux
  
  containers:
  - name: main-app
    image: nginx:latest
    ports:
    - containerPort: 80
    
    # v1.33 新特性：自定义容器终止信号
    lifecycle:
      # 自定义终止信号（Alpha 特性，需要 ContainerStopSignals=true）
      stopSignal: SIGUSR1
      
      # postStart 钩子：容器启动后执行
      postStart:
        exec:
          command:
          - /bin/sh
          - -c
          - echo "Container started at $(date)" >> /var/log/startup.log
      
      # preStop 钩子：容器终止前执行
      preStop:
        # v1.33 新特性：支持零持续时间的 sleep（Beta 特性）
        sleep:
          seconds: 0  # 零持续时间睡眠，立即返回
    
    # 健康检查
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 30
    
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 10
    
    # 资源限制
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi

---
# 传统 sleep 钩子示例（仍然支持）
apiVersion: v1
kind: Pod
metadata:
  name: traditional-sleep-demo
  labels:
    app: sleep-demo
spec:
  containers:
  - name: app
    image: alpine:latest
    command: ['sleep', '3600']
    
    lifecycle:
      preStop:
        exec:
          # 传统方式：使用 exec 命令实现睡眠
          command: ['sleep', '10']
    
    resources:
      requests:
        cpu: 50m
        memory: 32Mi
      limits:
        cpu: 100m
        memory: 64Mi

---
# 多信号支持示例
apiVersion: v1
kind: Pod
metadata:
  name: multi-signal-demo
  labels:
    app: signal-demo
spec:
  os:
    name: linux
  
  containers:
  # 使用 SIGTERM（默认）
  - name: sigterm-app
    image: nginx:latest
    lifecycle:
      stopSignal: SIGTERM  # 明确指定 SIGTERM
      preStop:
        sleep:
          seconds: 5
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 200m
        memory: 128Mi
  
  # 使用自定义信号
  - name: sigusr1-app
    image: nginx:latest
    lifecycle:
      stopSignal: SIGUSR1  # 自定义信号
      preStop:
        exec:
          command: ['/bin/sh', '-c', 'echo "Received custom signal"']
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 200m
        memory: 128Mi